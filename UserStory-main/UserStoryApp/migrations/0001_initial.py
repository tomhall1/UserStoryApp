# Generated by Django 2.1.15 on 2022-11-12 16:20

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('businessReg', models.TextField(blank=True)),
                ('businessIndustry', models.TextField(blank=True)),
                ('hourlyRate', models.IntegerField(blank=True, null=True)),
                ('name', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'Business',
            },
        ),
        migrations.CreateModel(
            name='BusinessCategory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'BusinessCategory',
            },
        ),
        migrations.CreateModel(
            name='BusinessDetails',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True)),
                ('LegalEntityName', models.TextField(blank=True)),
                ('Address', models.TextField(blank=True)),
                ('BusinessNumber', models.IntegerField(blank=True, null=True)),
                ('BusinessEmail', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'BusinessDetails',
            },
        ),
        migrations.CreateModel(
            name='BusinessUsers',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Role', models.TextField(blank=True)),
                ('Business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='UserStoryApp.Business')),
            ],
            options={
                'db_table': 'BusinessUsers',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'Category',
            },
        ),
        migrations.CreateModel(
            name='DevelopmentTask',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'DevelopmentTask',
            },
        ),
        migrations.CreateModel(
            name='Epic',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('versionName', models.TextField(blank=True)),
                ('Category', models.ManyToManyField(to='UserStoryApp.Category')),
            ],
            options={
                'db_table': 'Epic',
            },
        ),
        migrations.CreateModel(
            name='Estimates',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('noOfHours', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Estimates',
            },
        ),
        migrations.CreateModel(
            name='Persona',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Name', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'Persona',
            },
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'Platform',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True)),
                ('status', models.BooleanField(default=True)),
                ('Business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='UserStoryApp.Business')),
            ],
            options={
                'db_table': 'Project',
            },
        ),
        migrations.CreateModel(
            name='RAIDS',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'RAIDS',
            },
        ),
        migrations.CreateModel(
            name='US_Group',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'US_Group',
            },
        ),
        migrations.CreateModel(
            name='UserStory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('iWantTO', models.TextField(blank=True)),
                ('soThat', models.TextField(blank=True)),
                ('priority', models.TextField(blank=True)),
                ('DevelopmentTask', models.ManyToManyField(to='UserStoryApp.DevelopmentTask')),
                ('Epic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='UserStoryApp.Epic')),
                ('Persona', models.ManyToManyField(to='UserStoryApp.Persona')),
                ('RAIDS', models.ManyToManyField(to='UserStoryApp.RAIDS')),
                ('US_Group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='UserStoryApp.US_Group')),
            ],
            options={
                'db_table': 'UserStory',
            },
        ),
        migrations.CreateModel(
            name='UserStoryVersion',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('Project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='UserStoryApp.Project')),
            ],
            options={
                'db_table': 'UserStoryVersion',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('Role', models.TextField(blank=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='userstory',
            name='userStoriesVersion',
            field=models.ManyToManyField(to='UserStoryApp.UserStoryVersion'),
        ),
        migrations.AddField(
            model_name='estimates',
            name='Platform',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='UserStoryApp.Platform'),
        ),
        migrations.AddField(
            model_name='estimates',
            name='UserStory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='UserStoryApp.UserStory'),
        ),
        migrations.AddField(
            model_name='businessusers',
            name='User',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='business',
            name='BusinessCategory',
            field=models.ManyToManyField(to='UserStoryApp.BusinessCategory'),
        ),
        migrations.AddField(
            model_name='business',
            name='Datails',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='UserStoryApp.BusinessDetails'),
        ),
    ]
